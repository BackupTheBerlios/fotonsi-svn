# Code Generated by ZenTest v. 3.2.0
#                 classname: asrt / meth =  ratio%
#  UCLPW::SkeletonProcessor:    0 /    8 =   0.00%

require 'test/unit' unless defined? $ZENTEST and $ZENTEST
require 'uclpw'
require 'fileutils'
require 'find'

module TestUCLPW
  class TestSkeletonProcessor < Test::Unit::TestCase
    def setup
      @test_proj_dirs = ['test/test_proj', 'test/test_proj2']
      wipe_test_dirs
    end

    def teardown
      wipe_test_dirs
    end

    def wipe_test_dirs
      @test_proj_dirs.each do |dir|
        FileUtils.rm_rf(dir)
      end
    end

    def assert_dirs_equal(expected_dir, test_dir)
      assert_equal('', `diff -ur -x .svn #{test_dir} #{expected_dir} 2>&1`)
    end



    def test_initialize
      processor = UCLPW::SkeletonProcessor.new('test/test_proj', 'test_skel',
                                               'test/skeletons')
      assert(File.exists?('test/test_proj'))
    end

    def test_cleanup_dir
      num_backup_files = 0
      processor = UCLPW::SkeletonProcessor.new('test/test_proj', 'test_skel',
                                               'test/skeletons')
      processor.process_dir
      Find.find('test/test_proj') do |f|
        num_backup_files += 1 if f =~ /~$/
      end
      assert(num_backup_files > 0)
      processor.cleanup_dir
      num_backup_files = 0
      Find.find('test/test_proj') do |f|
        num_backup_files += 1 if f =~ /~$/
      end
      assert_equal(0, num_backup_files)
    end

    def test_get_vars
      processor = UCLPW::SkeletonProcessor.new('test/test_proj', 'test_skel',
                                               'test/skeletons')
      assert_equal([["some_var",       "default_value"],
                    ["some_other_var", ""]],
                   processor.get_vars)
    end

    def test_ignore_list_equals
      processor = UCLPW::SkeletonProcessor.new('test/test_proj', 'test_skel',
                                               'test/skeletons')
      assert_equal(UCLPW::SkeletonProcessor::DEFAULT_IGNORE_LIST,
                   processor.ignore_list)
      processor.ignore_list += ['foo', 'bar']
      assert_equal(UCLPW::SkeletonProcessor::DEFAULT_IGNORE_LIST + ['foo', 'bar'],
                   processor.ignore_list)
      processor.ignore_list =  ['foo', 'bar']
      assert_equal(['foo', 'bar'],
                   processor.ignore_list)
    end

    def test_process_dir
      processor = UCLPW::SkeletonProcessor.new('test/test_proj', 'test_skel',
                                               'test/skeletons')
      processor.vars['some_var'] = 'some var value'
      processor.vars['some_other_var'] = 'some other value'
      processor.process_dir
      processor.cleanup_dir
      assert_dirs_equal('test/expected/first_test_proj', 'test/test_proj')
    end

    def test_project_name
      processor = UCLPW::SkeletonProcessor.new('test/test_proj', 'test_skel',
                                               'test/skeletons')
      assert_equal(processor.project_name, 'test_proj')
      assert_equal(processor.output_dir,   'test/test_proj')
    end

    def test_skeleton_dirs
      processor = UCLPW::SkeletonProcessor.new('test/test_proj', 'test_skel',
                                               ['test/skeletons'])
      assert_equal(['test/skeletons'],  processor.skeleton_dirs)
      processor = UCLPW::SkeletonProcessor.new('test/test_proj2', 'test_skel',
                                               'test/skeletons')
      assert_equal(['test/skeletons'],  processor.skeleton_dirs)
      processor.skeleton_dirs = ['dir', 'list']
      assert_equal(['dir', 'list'],     processor.skeleton_dirs)
    end

    def test_update_vars_file
      processor = UCLPW::SkeletonProcessor.new('test/test_proj', 'test_skel',
                                               'test/skeletons')
      processor.vars['some_var'] = 'my custom value'
      processor.update_vars_file
      var_file_contents = <<EOD;
some_var = my custom value
some_other_var = 
EOD
      assert_equal(var_file_contents, File.read(File.join(processor.output_dir,
                                                          processor.vars_file)))
    end

    def test_vars
      processor = UCLPW::SkeletonProcessor.new('test/test_proj', 'test_skel',
                                               'test/skeletons')
      processor.vars['some_var'] = 'some var value'
      processor.vars['some_other_var'] = 'some other value'
      assert_equal({'APPLICATION_ID' => 'test/test_proj',
                    'some_var'       => 'some var value',
                    'some_other_var' => 'some other value'}, processor.vars)
    end

    def test_vars_file
      processor = UCLPW::SkeletonProcessor.new('test/test_proj', 'test_skel',
                                               'test/skeletons')
      assert_equal('vars', processor.vars_file)
    end
  end
end

# Number of errors detected: 13
