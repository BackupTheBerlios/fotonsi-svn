# Code Generated by ZenTest v. 3.2.0
#                 classname: asrt / meth =  ratio%
#           ChrbTypes::Base:    0 /    2 =   0.00%
#       ChrbTypes::Property:    0 /    1 =   0.00%

require 'test/unit' unless defined? $ZENTEST and $ZENTEST

require 'chrb_types/base'

module TestChrbTypes
  class TestBase < Test::Unit::TestCase
    def test_base_chrbtype_class_methods
        require 'chrb_types/test_chrb'

        assert_equal(2, ChrbTypes::TestChrb.properties.size,
                                            "No. of properties")
        assert_equal(:first_prop, ChrbTypes::TestChrb.properties[0].name)
        assert_equal("Second test property", ChrbTypes::TestChrb.properties[1].description)
        assert_equal(1, ChrbTypes::TestChrb.erb_templates.size,
                                            "No. of ERB templates")
    end

    def test_property
        prop_name = 'test_prop'
        prop_desc = 'Some test property'
        p = ChrbTypes::Property.new(prop_name, :description => prop_desc)
        assert(prop_name, p.name)
        assert(prop_desc, p.description)
        assert_raise(ChrbTypes::BadChrbError) do
            # Should be :description, not 'description'
            ChrbTypes::Property.new(prop_name, 'description' => prop_desc)
        end
    end

    def test_property_attributes
        require 'chrb_types/property_test'
        p_list = ChrbTypes::PropertyTest.properties
        assert_equal(2, p_list.size)
        assert_equal('some default value', p_list[0].default)

        assert_raise(ChrbTypes::BadChrbError) do
            require 'chrb_types/bad_chrb'
        end

        assert_raise(ChrbTypes::BadChrbError) do
            require 'chrb_types/bad_prop_type_chrb'
        end
    end

    def test_repo_dir
        assert_equal('.', ChrbTypes::TestChrb.chrb_repo_dir)
        test_repo = File.join('test', 'repo')
        ChrbTypes::Base.chrb_repo_dir = test_repo
        assert_equal(test_repo, ChrbTypes::TestChrb.chrb_repo_dir)
    end

    def test_unpack
        require 'fileutils'
        tmp_dir = File.join('test', 'tmp')
        FileUtils.rm_rf tmp_dir
        FileUtils.mkdir_p tmp_dir
        dest_dir     = File.join(tmp_dir, 'test_chrb')
        expected_dir = File.join('test', 'repo', 'test_chrb')
        ChrbTypes::TestChrb.create(dest_dir,
                                   {:first_prop  => 'Value for the first prop',
                                    :second_prop => "Some 'other' value"})
        # Check everything's OK
        assert_equal("", `diff -ur --exclude .svn #{dest_dir} #{expected_dir} 2>&1`)
        # Clean up
        FileUtils.rm_rf tmp_dir
    end
  end
end
