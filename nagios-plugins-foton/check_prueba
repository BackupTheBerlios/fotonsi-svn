#!/bin/bash

#    Dummy nagios plugin.
#    Copyright (C) 2005 Fotón Sistemas Inteligentes.
#
#    This program is free software; you can redistribute it and/or modify
#    it under the terms of the GNU General Public License as published by
#    the Free Software Foundation; either version 2 of the License, or
#    (at your option) any later version.
#
#    This program is distributed in the hope that it will be useful,
#    but WITHOUT ANY WARRANTY; without even the implied warranty of
#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#    GNU General Public License for more details.
#
#    You should have received a copy of the GNU General Public License
#    along with this program; if not, write to the Free Software
#    Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301 USA



PROGNAME=`/usr/bin/basename $0`
PROGPATH=`echo $0 | /bin/sed -e 's,[\\/][^\\/][^\\/]*$,,'`
REVISION=`echo '$Revision$' | /bin/sed -e 's/[^0-9.]//g'`

. $PROGPATH/utils.sh

# Versión inicial

#case "$1" in
#	ok)		echo "Estado correcto."
#			exit 0
#			;;
#	warning)	echo "Estado warning."
#			exit 1
#			;;
#	critical)	echo "Estado crítico."
#			exit 2
#			;;
#	unknown)	echo "Estado inalcanzable."
#			exit -1
#			;;
#esac


print_usage() {
    echo "Usage: $PROGNAME [ok|warning|critical|unknown|dependent]"
    echo "Usage: $PROGNAME [-h|--help]"
    echo "Usage: $PROGNAME [-V|--version]"
}

print_help() {
    echo "$PROGNAME: Version $REVISION"
    echo "Dummy plugin for Nagios"
    echo ""
    print_usage
}



# Make sure the correct number of command line
# arguments have been supplied

if [ $# -lt 1 ]; then
    print_help
    exit $STATE_UNKNOWN
fi


# Parse the command line arguments

while test -n "$1"; do
    case "$1" in
        --help)
            print_help
            exit $STATE_UNKNOWN
            ;;
        -h)
            print_help
            exit $STATE_UNKNOWN
            ;;
        --version)
            print_help
            exit $STATE_UNKNOWN
            ;;
        -V)
            print_help
            exit $STATE_UNKNOWN
            ;;
        ok)
            echo "Estado correcto."
            exit $STATE_OK
            ;;
        warning)
            echo "Estado warning."
            exit $STATE_WARNING
            ;;
        critical)
            echo "Estado critical."
            exit $STATE_CRITICAL
            ;;
        unknown)
            echo "Estado desconocido."
            exit $STATE_UNKNOWN
            ;;
        dependent)
            echo "Estado dependiente."
            exit $STATE_DEPENDENT
            ;;
        *)
            echo "Unknown argument: $1"
            print_help
            exit $STATE_UNKNOWN
            ;;
    esac
    shift
done


